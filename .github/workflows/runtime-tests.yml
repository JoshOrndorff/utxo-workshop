name: Tests

on:
  pull_request:
    branches:
    - master
  push:
    branches:
    - master

jobs:
  build_release_node:
    name: Build Release Node
    runs-on: ubuntu-18.04
    steps:
    - name: Checkout Code
      uses: actions/checkout@v1

      # Steps taken from https://github.com/actions/cache/blob/master/examples.md#rust---cargo
    - name: Cache cargo registry
      uses: actions/cache@v1
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

    - name: Cache cargo index
      uses: actions/cache@v1
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}

    - name: Cache cargo build
      uses: actions/cache@v1
      with:
        path: target
        key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}

    - name: Install toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: nightly-2020-03-09
        components: rustfmt
        target: wasm32-unknown-unknown
        default: true

    - name: Build the node
      run: cargo build --release

    - name: Upload the built node
      uses: actions/upload-artifact@v1
      with:
        name: utxo-workshop
        path: target/release/

  execute_runtime_tests:
    name: Execute Runtime Tests
    needs: build_release_node
    runs-on: ubuntu-18.04
    steps:
    - name: Checkout Code
      uses: actions/checkout@v1

      # Steps taken from https://github.com/actions/cache/blob/master/examples.md#rust---cargo
    - name: Cache cargo registry
      uses: actions/cache@v1
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

    - name: Cache cargo index
      uses: actions/cache@v1
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}

    - name: Cache cargo build
      uses: actions/cache@v1
      with:
        path: target
        key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}

    - name: Install toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: nightly-2020-03-09
        components: rustfmt
        target: wasm32-unknown-unknown
        default: true

    - name: Execute Runtime Tests
      run: cargo test -p utxo-runtime

  execute_ux_demo:
    runs-on: ubuntu-18.04
    name: Execute UX Demo
    needs: build_release_node
    steps:
    - name: Checkout Code
      uses: actions/checkout@v1

    - name: Install Node js
      uses: actions/setup-node@v1
      with:
        node-version: '10.x'

    - name: Download pre-built node
      uses: actions/download-artifact@v1
      with:
        name: utxo-workshop
        path: target/release/utxo-workshop

    - name: Start background node
      run: ./target/release/utxo-workshop --dev &

    - name: Run the UX demo script
      run: cd ux-demo |
           npm install |
           node index.js
